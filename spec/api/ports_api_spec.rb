=begin
#Metal API

#This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.

The version of the OpenAPI document: 1.0.0
Contact: support@equinixmetal.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PortsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PortsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PortsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PortsApi' do
    it 'should create an instance of PortsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PortsApi)
    end
  end

  # unit tests for assign_native_vlan
  # Assign a native VLAN
  # Assigns a virtual network to this port as a \&quot;native VLAN\&quot;
  # @param id Port UUID
  # @param vnid UUID or VNID of the virtual network to assign
  # @param [Hash] opts the optional parameters
  # @return [Port]
  describe 'assign_native_vlan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for assign_port
  # Assign a port to virtual network
  # Assign a port for a hardware to virtual network.
  # @param id Port UUID
  # @param vnid Virtual Network ID
  # @param [Hash] opts the optional parameters
  # @return [Port]
  describe 'assign_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bond_port
  # Enabling bonding
  # Enabling bonding for one or all ports
  # @param id Port UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :bulk_enable enable both ports
  # @return [Port]
  describe 'bond_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for convert_layer2
  # Convert to Layer 2
  # Converts a bond port to Layer 2. IP assignments of the port will be removed.
  # @param id Port UUID
  # @param [Hash] opts the optional parameters
  # @option opts [PortAssignInput] :vnid Virtual Network ID
  # @return [Port]
  describe 'convert_layer2 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for convert_layer3
  # Convert to Layer 3
  # Converts a bond port to Layer 3. VLANs must first be unassigned.
  # @param id Port UUID
  # @param [Hash] opts the optional parameters
  # @option opts [PortConvertLayer3Input] :request_ips IPs to request
  # @return [Port]
  describe 'convert_layer3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_native_vlan
  # Remove native VLAN
  # Removes the native VLAN from this port
  # @param id Port UUID
  # @param [Hash] opts the optional parameters
  # @return [Port]
  describe 'delete_native_vlan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disbond_port
  # Disabling bonding
  # Disabling bonding for one or all ports
  # @param id Port UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :bulk_disable disable both ports
  # @return [Port]
  describe 'disbond_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_port_by_id
  # Retrieve a port
  # Returns a port
  # @param id Port UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [Port]
  describe 'find_port_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unassign_port
  # Unassign a port
  # Unassign a port for a hardware.
  # @param id Port UUID
  # @param vnid Virtual Network ID
  # @param [Hash] opts the optional parameters
  # @return [Port]
  describe 'unassign_port test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
