=begin
#Metal API

#This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.

The version of the OpenAPI document: 1.0.0
Contact: support@equinixmetal.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::VPNApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VPNApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::VPNApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VPNApi' do
    it 'should create an instance of VPNApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::VPNApi)
    end
  end

  # unit tests for find_current_user_vpn_config
  # Retrieve the client vpn config for current user
  # Returns the client vpn config for the currently logged-in user.
  # @param code Facility code
  # @param [Hash] opts the optional parameters
  # @return [VPNConfig]
  describe 'find_current_user_vpn_config test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for turn_off_current_user_vpn
  # Turn off vpn for the current user
  # Turns off vpn for the currently logged-in user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'turn_off_current_user_vpn test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for turn_on_current_user_vpn
  # Turn on vpn for the current user
  # Turns on vpn for the currently logged-in user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'turn_on_current_user_vpn test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
