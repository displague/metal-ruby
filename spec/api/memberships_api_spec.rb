=begin
#Metal API

#This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.

The version of the OpenAPI document: 1.0.0
Contact: support@equinixmetal.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MembershipsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MembershipsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MembershipsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MembershipsApi' do
    it 'should create an instance of MembershipsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MembershipsApi)
    end
  end

  # unit tests for delete_membership
  # Delete the membership
  # Deletes the membership.
  # @param id Membership UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_membership test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_membership_by_id
  # Retrieve a membership
  # Returns a single membership.
  # @param id Membership UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [Membership]
  describe 'find_membership_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_project_memberships
  # Retrieve project memberships
  # Returns all memberships in a project.
  # @param project_id Project UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @option opts [Integer] :page Page to return
  # @option opts [Integer] :per_page Items returned per page
  # @return [MembershipList]
  describe 'find_project_memberships test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_membership
  # Update the membership
  # Updates the membership.
  # @param id Membership UUID
  # @param membership Membership to update
  # @param [Hash] opts the optional parameters
  # @return [Membership]
  describe 'update_membership test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
