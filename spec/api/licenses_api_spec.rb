=begin
#Metal API

#This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.

The version of the OpenAPI document: 1.0.0
Contact: support@equinixmetal.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::LicensesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LicensesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::LicensesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LicensesApi' do
    it 'should create an instance of LicensesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::LicensesApi)
    end
  end

  # unit tests for create_license
  # Create a License
  # Creates a new license for the given project
  # @param id Project UUID
  # @param license License to create
  # @param [Hash] opts the optional parameters
  # @return [License]
  describe 'create_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_license
  # Delete the license
  # Deletes a license.
  # @param id License UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_license_by_id
  # Retrieve a license
  # Returns a license
  # @param id License UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [License]
  describe 'find_license_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_project_licenses
  # Retrieve all licenses
  # Provides a collection of licenses for a given project.
  # @param id Project UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @option opts [Integer] :page Page to return
  # @option opts [Integer] :per_page Items returned per page
  # @return [LicenseList]
  describe 'find_project_licenses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_license
  # Update the license
  # Updates the license.
  # @param id License UUID
  # @param license License to update
  # @param [Hash] opts the optional parameters
  # @return [License]
  describe 'update_license test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
