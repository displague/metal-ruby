=begin
#Metal API

#This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.

The version of the OpenAPI document: 1.0.0
Contact: support@equinixmetal.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::VolumesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VolumesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::VolumesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VolumesApi' do
    it 'should create an instance of VolumesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::VolumesApi)
    end
  end

  # unit tests for clone_volume
  # Clone volume/snapshot
  # Clone your volume or snapshot into a new volume. To clone the volume, send an empty body. To promote a volume snapshot into a new volume, include the snapshot_timestamp attribute in the request body.
  # @param id Volume UUID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :snapshot_timestamp snapshot timestamp
  # @return [Volume]
  describe 'clone_volume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_volume
  # Create a volume
  # Creates a new volume in our datacenter. The valid attribute values for &#x60;plan&#x60; and &#x60;facility&#x60; are:           \&quot;facility\&quot;: \&quot;ams1\&quot;, \&quot;ewr1\&quot;, \&quot;nrt1\&quot;, \&quot;sjc1\&quot;          \&quot;plan\&quot;: \&quot;storage_1\&quot; (Standard), \&quot;storage_2\&quot; (Performance)
  # @param id Project UUID
  # @param volume Volume to create
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'create_volume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_volume_attachment
  # Attach your volume
  # Attach your volume to a device.
  # @param id Volume UUID
  # @param attachment Device to attach
  # @param [Hash] opts the optional parameters
  # @return [VolumeAttachment]
  describe 'create_volume_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_volume_snapshot_policy
  # Create a volume snapshot policy
  # Creates a new snapshot policy of your volume.
  # @param id Volume UUID
  # @param snapshot_frequency Snapshot frequency
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :snapshot_count Snapshot count
  # @return [SnapshotPolicy]
  describe 'create_volume_snapshot_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_volume
  # Delete the volume
  # Deletes the volume.
  # @param id Volume UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_volume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_volume_attachment
  # Detach volume
  # Detach volume.
  # @param id Attachment UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_volume_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_volume_snapshot
  # Delete volume snapshot
  # Delete volume snapshot.
  # @param volume_id Volume UUID
  # @param id Snapshot UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_volume_snapshot test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_volume_snapshot_policy
  # Delete the volume snapshot policy
  # Deletes the volume snapshot policy.
  # @param id Snapshot Policy UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_volume_snapshot_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volume_attachment_by_id
  # Retrieve an attachment
  # Returns a single attachment if the user has access
  # @param id Attachment UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [VolumeAttachment]
  describe 'find_volume_attachment_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volume_attachments
  # Retrieve all volume attachment
  # Returns a list of the current volume’s attachments.
  # @param id Volume UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [VolumeAttachmentList]
  describe 'find_volume_attachments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volume_by_id
  # Retrieve a volume
  # Returns a single volume if the user has access
  # @param id Volume UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [Volume]
  describe 'find_volume_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volume_customdata
  # Retrieve the custom metadata of a storage volume
  # Provides the custom metadata stored for this storage volume in json format
  # @param id Storage Volume UUID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'find_volume_customdata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volume_events
  # Retrieve volume&#39;s events
  # Returns a list of the current volume’s events
  # @param id Volume UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @option opts [Integer] :page Page to return
  # @option opts [Integer] :per_page Items returned per page
  # @return [EventList]
  describe 'find_volume_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volume_snapshots
  # Retrieve all volume snapshot
  # Returns a list of the current volume’s snapshots. To create Volume Snapshots, please check the Volume Snapshot Policies feature.
  # @param id Volume UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @return [VolumeSnapshotList]
  describe 'find_volume_snapshots test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_volumes
  # Retrieve all volumes
  # Returns a list of the current projects’s volumes.
  # @param id Project UUID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :include Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.
  # @option opts [Array<String>] :exclude Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.
  # @option opts [Integer] :page Page to return
  # @option opts [Integer] :per_page Items returned per page
  # @return [VolumeList]
  describe 'find_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_volume
  # Restore volume
  # Restore the volume to the given snapshot.
  # @param id Volume UUID
  # @param restore_point restore point
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'restore_volume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_volume
  # Update the volume
  # Updates the volume.
  # @param id Volume UUID
  # @param volume Volume to update
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'update_volume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_volume_snapshot_policy
  # Update the volume snapshot policy
  # Updates the volume snapshot policy.
  # @param id Snapshot Policy UUID
  # @param snapshot_frequency Snapshot frequency
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :snapshot_count Snapshot count
  # @return [SnapshotPolicy]
  describe 'update_volume_snapshot_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
